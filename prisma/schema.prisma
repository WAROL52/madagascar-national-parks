// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// datasource db {
//   provider = "sqlite"
//   // provider = "postgresql"
//   // url      = env("DATABASE_URL")
//   url      = "file:../node_modules/.prisma/client/database.sqlite3"
// }

// generator client {
//   provider = "prisma-client-js"
// }

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "./dto"
  outputToNestJsResourceStructure = "true"
  exportRelationModifierClasses   = "true"
  // reExport                        = "false"
  // createDtoPrefix                 = "Create"
  // updateDtoPrefix                 = "Update"
  // dtoSuffix                       = "Dto"
  // entityPrefix                    = ""
  // entitySuffix                    = ""
  fileNamingStyle                 = "kebab"
}

datasource db {
  relationMode = "prisma"
  provider     = "mysql"
  url          = "mysql://xigh60z4mo532i37sac8:pscale_pw_pANR8dbWvNWmiAzcF8L75NEi4VVMEGGaP4WGYHRR9FQ@us-east.connect.psdb.cloud/mnp-database?sslaccept=strict"
}

enum Role {
  ResponsableSite
  Admin
  SuperAdmin
}

enum SiteName {
  aucun
  tous
  ABT
  ABV
  AHL
  AJS
  AKF
  ALZ
  AND
  ANK
  ANL
  ARG
  BBL
  BMR
  BTP
  BZM
  CSM
  ISL
  IVB
  KLB
  MDA
  MDS
  MGV
  MKA
  MNB
  MNG
  MNN
  MRJ
  MRL
  MRT
  MSL
  MTD
  NMGB
  NMK
  NSH
  NST
  NSV
  RAN
  SML
  TSP
  TST
  ZHM
  ZVB
}

model Email {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()
  email         String   @unique
  passwordToken String?
  role          Role     @default(Admin)
  siteName      SiteName @default(aucun)
  User          User?
}

enum Sexe {
  Homme
  Femme
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  email   Email  @relation(fields: [emailId], references: [id])
  emailId Int    @unique
  nom     String
  prenom  String

  motdepasse      String?
  tel1            String?
  tel2            String?
  adresse         String?
  dataNaissance   DateTime?
  lieuNaissance   String?
  ResponsableSite ResponsableSite?
  sexe            Sexe             @default(Homme)
  description     String?
  avatar          String?
}

model Site {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt()
  Formation       Formation?
  Excecution      Excecution?
  ResponsableSite ResponsableSite?
}

model RisqueProjet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  value     Int
  title     String
  color     String?  @default("white")
  Etape     Etape[]
}

model RisqueTache {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  color     String?  @default("white")
  value     Int
  title     String
  Etape     Etape[]
}

model Etape {
  id              Int          @id @default(autoincrement())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt()
  risqueProject   RisqueProjet @relation(fields: [risqueProjetId], references: [id])
  risqueProjetId  Int
  risqueTache     RisqueTache  @relation(fields: [risqueTacheId], references: [id])
  risqueTacheId   Int
  progression     Int?         @default(0)
  debutPrevionnel DateTime?    @default(now())
  nombreDeJours   Int?         @default(0)
  finPrevisionnel DateTime?    @default(now())
  debutReel       DateTime?    @default(now())
  finReel         DateTime?    @default(now())
  perturbation    Int?         @default(0)
  tempsConsommes  Int?         @default(0)
  formation       Formation    @relation(fields: [formationId], references: [id])
  formationId     Int
  Excecution      Excecution?  @relation(fields: [excecutionId], references: [id])
  excecutionId    Int?

  @@index([risqueTacheId])
  @@index([risqueProjetId])
  @@index([formationId])
  @@index([excecutionId])
}

model ResponsableSite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  site      Site     @relation(fields: [siteId], references: [id])
  siteId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Formation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  site      Site     @relation(fields: [siteId], references: [id])
  siteId    Int      @unique
  Etape     Etape[]
}

model Excecution {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  site      Site     @relation(fields: [siteId], references: [id])
  siteId    Int      @unique
  Etape     Etape[]
}
